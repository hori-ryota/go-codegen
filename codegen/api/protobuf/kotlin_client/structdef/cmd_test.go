package structdef_test

import (
	cmd "github.com/hori-ryota/go-codegen/codegen"
	"github.com/mattn/go-shellwords"
	"github.com/spf13/cobra"
)

func Example() {
	input := "api protobuf kotlin_client structdef -t ../../../internal/testdata/internal/application -o ../../../internal/testdata/external/adapter/protobuf/httprpc/kotlin/src/commonMain --kotlinPackage com.github.horiryota.gocodegen.api.example.codegen"

	cmd := prepareCmdWithStdout(input)
	err := cmd.Execute()
	if err != nil {
		panic(err)
	}
	// Output:
	// // Code generated by go-codegen api protobuf kotlin_client httprpc structdef; DO NOT EDIT
	//
	// package com.github.horiryota.gocodegen.api.example.codegen
	//
	// import kotlinx.serialization.SerialId
	// import kotlinx.serialization.SerialName
	// import kotlinx.serialization.Serializable
	//
	// @Serializable
	// data class DoingSomethingWithOutputAndActorUsecaseInput(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String,
	//     @SerialId(2)
	//     @SerialName("int_param")
	//     val intParam: Long,
	//     @SerialId(3)
	//     @SerialName("int64_param")
	//     val int64Param: Long,
	//     @SerialId(4)
	//     @SerialName("uint_param")
	//     val uintParam: Long,
	//     @SerialId(5)
	//     @SerialName("uint64_param")
	//     val uint64Param: Long,
	//     @SerialId(6)
	//     @SerialName("float32_param")
	//     val float32Param: Float,
	//     @SerialId(7)
	//     @SerialName("float64_param")
	//     val float64Param: Double,
	//     @SerialId(8)
	//     @SerialName("bytes_param")
	//     val bytesParam: List<Byte>,
	//     @SerialId(9)
	//     @SerialName("anonymous_nested_struct_param")
	//     val anonymousNestedStructParam: DoingSomethingWithOutputAndActorUsecaseInputAnonymousNestedStructParam,
	//     @SerialId(10)
	//     @SerialName("named_nested_struct_param")
	//     val namedNestedStructParam: NamedSomeType,
	//     @SerialId(11)
	//     @SerialName("string_enum_param")
	//     val stringEnumParam: StringEnum,
	//     @SerialId(12)
	//     @SerialName("int_enum_param")
	//     val intEnumParam: IntEnum,
	//     @SerialId(13)
	//     @SerialName("string_slice_param")
	//     val stringSliceParam: List<String>,
	//     @SerialId(14)
	//     @SerialName("int_slice_param")
	//     val intSliceParam: List<Long>,
	//     @SerialId(15)
	//     @SerialName("int64_slice_param")
	//     val int64SliceParam: List<Long>,
	//     @SerialId(16)
	//     @SerialName("uint_slice_param")
	//     val uintSliceParam: List<Long>,
	//     @SerialId(17)
	//     @SerialName("uint64_slice_param")
	//     val uint64SliceParam: List<Long>,
	//     @SerialId(18)
	//     @SerialName("float32_slice_param")
	//     val float32SliceParam: List<Float>,
	//     @SerialId(19)
	//     @SerialName("float64_slice_param")
	//     val float64SliceParam: List<Double>,
	//     @SerialId(20)
	//     @SerialName("bytes_slice_param")
	//     val bytesSliceParam: List<List<Byte>>,
	//     @SerialId(21)
	//     @SerialName("anonymous_nested_struct_slice_param")
	//     val anonymousNestedStructSliceParam: List<DoingSomethingWithOutputAndActorUsecaseInputAnonymousNestedStructSliceParam>,
	//     @SerialId(22)
	//     @SerialName("named_nested_struct_slice_param")
	//     val namedNestedStructSliceParam: List<NamedSomeType>,
	//     @SerialId(23)
	//     @SerialName("string_enum_slice_param")
	//     val stringEnumSliceParam: List<StringEnum>,
	//     @SerialId(24)
	//     @SerialName("int_enum_slice_param")
	//     val intEnumSliceParam: List<IntEnum>
	// )
	//
	// @Serializable
	// data class DoingSomethingWithOutputAndActorUsecaseInputAnonymousNestedStructParam(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
	//
	// @Serializable
	// data class NamedSomeType(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
	//
	// @Serializable
	// data class DoingSomethingWithOutputAndActorUsecaseInputAnonymousNestedStructSliceParam(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
	//
	// enum class StringEnum(val value: String) {
	//     unknown("unknown"),
	//     stringA("A"),
	//     stringB("B"),
	//     stringC("C")
	// }
	//
	// enum class IntEnum(val value: Long) {
	//     unknown(0),
	//     intOne(1),
	//     intThree(3),
	//     intTwo(2)
	// }
	//
	// @Serializable
	// data class DoingSomethingWithOutputAndActorUsecaseOutput(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
	//
	// @Serializable
	// data class DoingSomethingWithOutputWithoutActorUsecaseInput(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
	//
	// @Serializable
	// data class DoingSomethingWithOutputWithoutActorUsecaseOutput(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
	//
	// @Serializable
	// data class DoingSomethingWithoutOutputAndActorUsecaseInput(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
	//
	// @Serializable
	// data class DoingSomethingWithoutOutputWithActorUsecaseInput(
	//     @SerialId(1)
	//     @SerialName("string_param")
	//     val stringParam: String
	// )
}

func prepareCmdWithStdout(input string) *cobra.Command {
	input += " --useStdOut"
	args, err := shellwords.Parse(input)
	if err != nil {
		panic(err)
	}
	cmd := cmd.NewRootCmd()
	cmd.SetArgs(args)
	return cmd
}
